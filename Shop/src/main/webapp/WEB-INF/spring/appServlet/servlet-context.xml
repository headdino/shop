<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- 폴더 경로 매핑 -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/views/**" location="/WEB-INF/views/" />		<!-- views 안에 jsp 파일경로 매핑 -->


	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- DB 연결 경로 및 계정설정 -->
	<beans:bean name="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
		<beans:property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<beans:property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<beans:property name="username" value="ssh"/>
		<beans:property name="password" value="0000"/>
	</beans:bean>
	
	<!-- DB 정보와 sql 명령 경로 설정 -->
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"/>
		<beans:property name="mapperLocations" value="classpath:project/controller/mybatis/*.xml"/>
		<beans:property name="configLocation" value="classpath:mybatis-config.xml"/>
	</beans:bean>
		
	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0" ref="sqlSessionFactory"/>
	</beans:bean>
	
   <!-- 이메일 인증 관련 빈 등록 -->
   <beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
      <beans:property name="host" value="smtp.gmail.com" />
      <beans:property name="port" value="587" />
      <beans:property name="username" value="headdino2" />
      <beans:property name="password" value="epgvjmolpintxiou" />
      <beans:property name="javaMailProperties">
         <beans:props>
                <beans:prop key="mail.transport.protocol">smtp</beans:prop>
                <beans:prop key="mail.smtp.auth">true</beans:prop>
                <!-- gmail의 경우 보안문제 업데이트로 인해 SSLSocketFactory를 추가해야 smtp 사용 가능. -->
                <beans:prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</beans:prop>
                <beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
                <beans:prop key="mail.debug">true</beans:prop>
                <beans:prop key="mail.smtp.ssl.trust">smtp.gmail.com</beans:prop>
				<beans:prop key="mail.smtp.ssl.protocols">TLSv1.2</beans:prop>
            </beans:props>
      </beans:property>
      
   </beans:bean>
	
	
	
	
	<context:component-scan base-package="project.controller.Shop, project.util.mail" />
	
	
	<interceptors>
		<interceptor>
			<mapping path="/**"/>
			<beans:bean id="loginInterceptor" class="project.controller.Shop.interceptor.LoginInterceptor"/>
		</interceptor>
	
	</interceptors>
	
	
	
	
</beans:beans>
